apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: sb-instanceid-kafka1
  spec:
    replicas: 1
    selector:
      deploymentconfig: sb-instanceid-kafka1
    template:
      metadata:
        labels:
          app: sb-instanceid-kafka
          deploymentconfig: sb-instanceid-kafka1
      spec:
        containers:
        - name: kafka-1
          image: http://kafka-image-place-holder/kafka-openshift-orchestration
          command:
          - bin/kafka-server-start.sh
          args:
          - config/server.properties
          - --override
          - zookeeper.connect=sb-instanceid-zk
          - --override
          - advertised.host.name=sb-instanceid-kafka1
          - --override
          - broker.id=0
          volumeMounts:
          - mountPath: /tmp
            name: kafka-logs
          ports:
          - containerPort: 9092
        volumes:
        - name: kafka-logs
          persistentVolumeClaim:
            claimName: "kafka-pvc-name-replace1"
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - kafka-1
        from:
          kind: ImageStream
          name: http://kafka-image-place-holder/kafka-openshift-orchestration
---

apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: sb-instanceid-kafka2
  spec:
    replicas: 1
    selector:
      deploymentconfig: sb-instanceid-kafka2
    template:
      metadata:
        labels:
          app: sb-instanceid-kafka
          deploymentconfig: sb-instanceid-kafka2
      spec:
        containers:
        - name: kafka-2
          image: http://kafka-image-place-holder/kafka-openshift-orchestration
          command:
          - bin/kafka-server-start.sh
          args:
          - config/server.properties
          - --override
          - zookeeper.connect=sb-instanceid-zk
          - --override
          - advertised.host.name=sb-instanceid-kafka2
          - --override
          - broker.id=1
          volumeMounts:
          - mountPath: /tmp
            name: kafka-logs
          ports:
          - containerPort: 9092
        volumes:
        - name: kafka-logs
          persistentVolumeClaim:
            claimName: "kafka-pvc-name-replace2"
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - kafka-2
        from:
          kind: ImageStream
          name: http://kafka-image-place-holder/kafka-openshift-orchestration
---

apiVersion: v1
  kind: Service
  metadata:
    name: sb-instanceid-kafka1
  spec:
    ports:
    - port: 9092
    selector:
      deploymentconfig: sb-instanceid-kafka1

- apiVersion: v1
  kind: Service
  metadata:
    name: sb-instanceid-kafka2
  spec:
    ports:
    - port: 9092
    selector:
      deploymentconfig: sb-instanceid-kafka2
---

apiVersion: v1
  kind: Service
  metadata:
    name: sb-instanceid-kafka
  spec:
    ports:
    - port: 9092
    selector:
      app: sb-instanceid-kafka
---

apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: sb-instanceid-zk1
  spec:
    replicas: 1
    selector:
      deploymentconfig: sb-instanceid-zk1
    template:
      metadata:
        labels:
          app: sb-instanceid-zk
          deploymentconfig: sb-instanceid-zk1
      spec:
        containers:
        - name: zookeeper-1
          image: http://kafka-image-place-holder/kafka-openshift-orchestration
          command:
          - bin/zookeeper-server-start-multiple.sh
          args:
          - config/zookeeper.properties
          - sb-instanceid-zk
          - "1"
          - "3"
          volumeMounts:
          - mountPath: /tmp/zookeeper
            name: zookeeper
          ports:
          - containerPort: 2181
          - containerPort: 2888
          - containerPort: 3888
        volumes:
        - name: zookeeper
          persistentVolumeClaim:
            claimName: "zk-pvc-name-replace1"
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - zookeeper-1
        from:
          kind: ImageStream
          name: http://kafka-image-place-holder/kafka-openshift-orchestration
---

apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: sb-instanceid-zk2
  spec:
    replicas: 1
    selector:
      deploymentconfig: sb-instanceid-zk2
    template:
      metadata:
        labels:
          app: sb-instanceid-zk
          deploymentconfig: sb-instanceid-zk2
      spec:
        containers:
        - name: zookeeper-2
          image: http://kafka-image-place-holder/kafka-openshift-orchestration
          command:
          - bin/zookeeper-server-start-multiple.sh
          args:
          - config/zookeeper.properties
          - sb-instanceid-zk
          - "2"
          - "3"
          volumeMounts:
          - mountPath: /tmp/zookeeper
            name: zookeeper
          ports:
          - containerPort: 2181
          - containerPort: 2888
          - containerPort: 3888
        volumes:
        - name: zookeeper
          persistentVolumeClaim:
            claimName: "zk-pvc-name-replace2"
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - zookeeper-2
        from:
          kind: ImageStream
          name: http://kafka-image-place-holder/kafka-openshift-orchestration
---

apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: sb-instanceid-zk3
  spec:
    replicas: 1
    selector:
      deploymentconfig: sb-instanceid-zk3
    template:
      metadata:
        labels:
          app: sb-instanceid-zk
          deploymentconfig: sb-instanceid-zk3
      spec:
        containers:
        - name: zookeeper-3
          image: http://kafka-image-place-holder/kafka-openshift-orchestration
          command:
          - bin/zookeeper-server-start-multiple.sh
          args:
          - config/zookeeper.properties
          - sb-instanceid-zk
          - "3"
          - "3"
          volumeMounts:
          - mountPath: /tmp/zookeeper
            name: zookeeper
          ports:
          - containerPort: 2181
          - containerPort: 2888
          - containerPort: 3888
        volumes:
        - name: zookeeper
          persistentVolumeClaim:
            claimName: "zk-pvc-name-replace3"
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - zookeeper-3
        from:
          kind: ImageStream
          name: http://kafka-image-place-holder/kafka-openshift-orchestration
---

apiVersion: v1
  kind: Service
  metadata:
    name: sb-instanceid-zk1
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
    - name: 2888-tcp
      port: 2888
    - name: 3888-tcp
      port: 3888
    selector:
      deploymentconfig: sb-instanceid-zk1
---

apiVersion: v1
  kind: Service
  metadata:
    name: sb-instanceid-zk2
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
    - name: 2888-tcp
      port: 2888
    - name: 3888-tcp
      port: 3888
    selector:
      deploymentconfig: sb-instanceid-zk2
---

apiVersion: v1
  kind: Service
  metadata:
    name: sb-instanceid-zk3
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
    - name: 2888-tcp
      port: 2888
    - name: 3888-tcp
      port: 3888
    selector:
      deploymentconfig: sb-instanceid-zk3
---

apiVersion: v1
  kind: Service
  metadata:
    name: sb-instanceid-zk
  spec:
    ports:
    - name: 2181-tcp
      port: 2181
    - name: 2888-tcp
      port: 2888
    - name: 3888-tcp
      port: 3888
    selector:
      app: sb-instanceid-zk

