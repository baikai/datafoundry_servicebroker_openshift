apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: sb-instanceid-ss
spec:
  replicas: num-supervisors*****
  selector:
    matchLabels:
      sb-instanceid-storm: supervisor
  serviceName: sb-instanceid-ss
  template:
    metadata:
      labels:
        sb-instanceid-storm: supervisor
        service-broker: sb-instanceid-storm
    spec:
      containers:
      - name: supervisor
        image: http://storm-image-place-holder/storm-openshift-orchestration
        imagePullPolicy: IfNotPresent
        env:
        - name: CONFIGURE_ZOOKEEPER
          value: "true"
        - name: STORM_CMD
          value: "supervisor"
        - name: ZK_SERVER_1_SERVICE_HOST
          value: "external-zookeeper-server1*****"
        - name: ZK_SERVER_2_SERVICE_HOST
          value: "external-zookeeper-server2*****"
        - name: ZK_SERVER_3_SERVICE_HOST
          value: "external-zookeeper-server3*****"
        - name: APACHE_STORM_ZK_ROOT
          value: "zk-root*****"
        - name: APACHE_STORM_NIMBUS_SERVICE_HOST
          value: "storm-local-hostname*****"
        - name: APACHE_STORM_NIMBUS_SERVICE_PORT
          value: "thrift-port*****"
        - name: NUM_WORKERS_PER_SUPERVISOR
          value: "workers-per-supervisor*****"
        - name: KRB5_CONF_CONTENT
          value: "krb5-conf-content*****"
        - name: KAFKA_CLIENT_KEY_TAB_CONTENT
          value: "kafka-client-key-tab-content*****"
        - name: KAFKA_CLIENT_SERVICE_NAME
          value: "kafka-client-service-name*****"
        - name: KAFKA_CLIENT_PRINCIPAL
          value: "kafka-client-principal*****"
        - name: INSTANCE_NAMESPACE
          value: "instance-namespace*****"
        - name: INSTANCE_SS_SERVICENAME
          value: "sb-instanceid-ss"
        resources:
          limits:
            memory: "supervisor-memory*****Mi"
        volumeMounts:
        - name: storm-data
          mountPath: /opt/apache-storm/storm-local
      volumes:
      - name: storm-data
        emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: sb-instanceid-ss
spec:
  selector:
    sb-instanceid-storm: supervisor
  ports:
  - protocol: TCP
    port: 3772
  type: ClusterIP
  clusterIP: None

---
apiVersion: v1
kind: Service
metadata:
  name: sb-instanceid-su
spec:
  selector:
    sb-instanceid-storm: ui
  ports:
  - protocol: TCP
    port: 8080

---

apiVersion: v1
kind: Route
metadata:
  name: sb-instanceid-su
spec:
  host: sb-instanceid-stormui.endpoint-postfix-place-holder
  to:
    kind: Service
    name: sb-instanceid-su

---

apiVersion: v1
kind: ReplicationController
metadata:
  name: sb-instanceid-su
spec:
  replicas: 1
  selector:
    sb-instanceid-storm: ui
  template:
    metadata:
      labels:
        sb-instanceid-storm: ui
        service-broker: sb-instanceid-storm
    spec:
      containers:
      - name: ui
        image: http://storm-image-place-holder/storm-openshift-orchestration
        imagePullPolicy: IfNotPresent
        ports:
           - containerPort: 8080
        env:
        - name: CONFIGURE_ZOOKEEPER
          value: "true"
        - name: STORM_CMD
          value: "ui"
        - name: ZK_SERVER_1_SERVICE_HOST
          value: "external-zookeeper-server1*****"
        - name: ZK_SERVER_2_SERVICE_HOST
          value: "external-zookeeper-server2*****"
        - name: ZK_SERVER_3_SERVICE_HOST
          value: "external-zookeeper-server3*****"
        - name: APACHE_STORM_ZK_ROOT
          value: "zk-root*****"
        - name: APACHE_STORM_NIMBUS_SERVICE_HOST
          value: "storm-local-hostname*****"
        - name: APACHE_STORM_NIMBUS_SERVICE_PORT
          value: "thrift-port*****"
        - name: KRB5_CONF_CONTENT
          value: "krb5-conf-content*****"
        - name: KAFKA_CLIENT_KEY_TAB_CONTENT
          value: "kafka-client-key-tab-content*****"
        - name: KAFKA_CLIENT_SERVICE_NAME
          value: "kafka-client-service-name*****"
        - name: KAFKA_CLIENT_PRINCIPAL
          value: "kafka-client-principal*****"
        volumeMounts:
        - name: storm-data
          mountPath: /opt/apache-storm/storm-local
      volumes:
      - name: storm-data
        emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: sb-instanceid-sd
spec:
  selector:
    sb-instanceid-storm: drpc
  ports:
  - protocol: TCP
    port: 3772
  type: NodePort

---

apiVersion: v1
kind: ReplicationController
metadata:
  name: sb-instanceid-sd
spec:
  replicas: 1
  selector:
    sb-instanceid-storm: drpc
  template:
    metadata:
      labels:
        sb-instanceid-storm: drpc
        service-broker: sb-instanceid-storm
    spec:
      containers:
      - name: drpc
        image: http://storm-image-place-holder/storm-openshift-orchestration
        imagePullPolicy: IfNotPresent
        ports:
           - containerPort: 3772
        env:
        - name: CONFIGURE_ZOOKEEPER
          value: "true"
        - name: STORM_CMD
          value: "drpc"
        - name: ZK_SERVER_1_SERVICE_HOST
          value: "external-zookeeper-server1*****"
        - name: ZK_SERVER_2_SERVICE_HOST
          value: "external-zookeeper-server2*****"
        - name: ZK_SERVER_3_SERVICE_HOST
          value: "external-zookeeper-server3*****"
        - name: APACHE_STORM_ZK_ROOT
          value: "zk-root*****"
        - name: APACHE_STORM_NIMBUS_SERVICE_HOST
          value: "storm-local-hostname*****"
        - name: APACHE_STORM_NIMBUS_SERVICE_PORT
          value: "thrift-port*****"
        - name: KRB5_CONF_CONTENT
          value: "krb5-conf-content*****"
        - name: KAFKA_CLIENT_KEY_TAB_CONTENT
          value: "kafka-client-key-tab-content*****"
        - name: KAFKA_CLIENT_SERVICE_NAME
          value: "kafka-client-service-name*****"
        - name: KAFKA_CLIENT_PRINCIPAL
          value: "kafka-client-principal*****"
        volumeMounts:
        - name: storm-data
          mountPath: /opt/apache-storm/storm-local
      volumes:
      - name: storm-data
        emptyDir: {}

