apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    app: sb-instanceid-dataiku
  name: sb-instanceid-dataiku
spec:
  replicas: 1
  selector:
    app: sb-instanceid-dataiku
  template:
    metadata:
      labels:
        app: sb-instanceid-dataiku
    spec:
      containers:
      - image: http://dataiku-image-place-holder/dataiku-openshift-orchestration
        imagePullPolicy: IfNotPresent
        name: dataiku
        ports:
        - containerPort: 10000
        #resources: {}
        resources:
          limits:
            memory: "memory*****Mi"
            cpu: "cpu*****"
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /usr/share/dataiku/data
          name: dataiku-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: dataiku-volume
        persistentVolumeClaim:
          claimName: "pvcname*****node"
---
apiVersion: v1
kind: Route
metadata:
  annotations:
    openshift.io/host.generated: "true"
  labels:
    servicebroker: sb-instanceid-dataiku
  name: sb-instanceid-dataiku
spec:
  host: sb-instanceid-dataiku.endpoint-postfix-place-holder
  port:
    targetPort: 10000
  to:
    kind: Service
    name: sb-instanceid-dataiku
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sb-instanceid-dataiku
  name: sb-instanceid-dataiku
spec:
  ports:
  - name: web
    port: 10000
  selector:
    servicebroker: sb-instanceid-dataiku